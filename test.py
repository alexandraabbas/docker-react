import argparse import json import apache_beam as beam from apache_beam.options.pipeline_options import PipelineOptions def get_topic_path(topic_id): from google.cloud import pubsub_v1 publisher = pubsub_v1.PublisherClient() topic_path = publisher.topic_path("my-project", topic_id) return topic_path def run(known_args, pipeline_args): pipeline_options = PipelineOptions(pipeline_args, streaming=True, save_main_session=True) topic_path = get_topic_path(known_args.topic_id) file_reader = lambda element: beam.io.ReadFromText(element) with beam.Pipeline(options=pipeline_options) as pipeline: message = (pipeline | "Read Pub Sub Messages" >> beam.io.ReadFromPubSub(topic=topic_path,timestamp_attribute="ts").with_output_types(bytes) | "Parse Json Payload" >> beam.Map(json.loads) | "Formulate File Name" >> beam.Map(lambda element: "gs://"+element['bucket_name']+"/"+element['file_name']) | "Read File Content" >> beam.Map(file_reader) ) message | beam.Map(print) if __name__ == '__main__': parser = argparse.ArgumentParser() parser.add_argument("--topic_id") known_args, pipeline_args = parser.parse_known_args() run(known_args, pipeline_arg)